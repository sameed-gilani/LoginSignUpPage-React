{"ast":null,"code":"var _jsxFileName = \"/home/sameed/Desktop/loginSIgnUp_hooks_routes/src/SignUp.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SigningIn(props) {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [database, setDatabase] = useState(JSON.parse(localStorage.getItem('localDB')));\n  const navigate = useNavigate();\n  function handleSubmit(event) {\n    event.preventDefault();\n    manageSignUp(email, database);\n  }\n  function manageSignUp(signUpEmail, database) {\n    let flag = false;\n    let emailValidityFlag = validateEmail(signUpEmail); // returns whether the users input email is valid\n\n    if (emailValidityFlag === false) {\n      alert(\"You have entered an invalid email address!\");\n      flag = true;\n    }\n\n    // Searches the database to see if the same email already exists\n    let matchedObj = database.filter(obj => obj.email === signUpEmail);\n    if (matchedObj.length === 1) {\n      alert(\"Email already Exists. Sign in instead?\");\n      flag = true;\n    }\n\n    // If everything is valid, user gets an alert and the login page loads\n    if (flag === false) {\n      const newUser = {\n        name: name,\n        email: email,\n        password: password\n      };\n      database.push(newUser);\n      localStorage.setItem('localDB', JSON.stringify(database));\n      setDatabase(database);\n      alert(\"Signed Up. Loading Login Page\");\n      navigate('/loginPage');\n    }\n  }\n  function validateEmail(mail) {\n    return /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(mail);\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Name:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: name,\n      name: \"Name\",\n      onChange: event => {\n        setName(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Email:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: email,\n      name: \"Email\",\n      onChange: event => {\n        setEmail(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Password:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: password,\n      name: \"Password\",\n      onChange: event => {\n        setPassword(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        navigate('/loginPage');\n      },\n      children: \"Sign in?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 13\n  }, this);\n}\n_s(SigningIn, \"ZaOYaGcBv5HJpxpx+i9lPGCBKG8=\", false, function () {\n  return [useNavigate];\n});\n_c = SigningIn;\nvar _c;\n$RefreshReg$(_c, \"SigningIn\");","map":{"version":3,"names":["useState","useNavigate","jsxDEV","_jsxDEV","SigningIn","props","_s","name","setName","email","setEmail","password","setPassword","database","setDatabase","JSON","parse","localStorage","getItem","navigate","handleSubmit","event","preventDefault","manageSignUp","signUpEmail","flag","emailValidityFlag","validateEmail","alert","matchedObj","filter","obj","length","newUser","push","setItem","stringify","mail","test","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","type","onClick","_c","$RefreshReg$"],"sources":["/home/sameed/Desktop/loginSIgnUp_hooks_routes/src/SignUp.js"],"sourcesContent":["import {useState} from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n\nexport default function SigningIn(props){\n\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [database, setDatabase] = useState(JSON.parse(localStorage.getItem('localDB')))\n\n    const navigate = useNavigate();\n\n\n    function handleSubmit(event){\n        event.preventDefault()\n        manageSignUp(email,database);\n    }\n\n    function manageSignUp(signUpEmail,database){\n\n        let flag = false\n        let emailValidityFlag = validateEmail(signUpEmail); // returns whether the users input email is valid\n\n        if(emailValidityFlag === false){\n            alert(\"You have entered an invalid email address!\")\n            flag = true\n        }\n\n        // Searches the database to see if the same email already exists\n        let matchedObj = database.filter(obj => obj.email === signUpEmail);\n        if(matchedObj.length === 1){\n            alert(\"Email already Exists. Sign in instead?\")\n            flag = true\n        }\n\n        // If everything is valid, user gets an alert and the login page loads\n        if(flag === false){\n\n            const newUser = {\n                name: name,\n                email: email,\n                password: password\n            }\n\n            database.push(newUser);\n            localStorage.setItem('localDB',JSON.stringify(database))\n            setDatabase(database);\n\n            alert(\"Signed Up. Loading Login Page\");\n            navigate('/loginPage');\n        }\n    }\n\n    function validateEmail(mail){\n        return /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(mail);\n    }\n\n\n        return (\n            <form onSubmit={handleSubmit}>\n                <label>Name:</label>\n                <input value={name} name=\"Name\" onChange={(event)=>{\n                    setName(event.target.value)\n                }}/>\n\n                <label>Email:</label>\n                <input value={email} name=\"Email\" onChange={(event)=>{\n                    setEmail(event.target.value)\n                }}/>\n\n                <label>Password:</label>\n                <input value={password} name=\"Password\" onChange={(event)=>{\n                    setPassword(event.target.value)\n                }}/>\n\n                <button type=\"submit\">Submit</button>\n                <button onClick={()=>{\n                    navigate('/loginPage');\n\n                }}>Sign in?</button>\n            </form>\n        );\n\n\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}