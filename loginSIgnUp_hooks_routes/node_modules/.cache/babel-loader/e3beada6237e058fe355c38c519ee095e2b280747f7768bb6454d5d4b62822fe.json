{"ast":null,"code":"var _jsxFileName = \"/home/sameed/Desktop/login_signup_hooks/src/SignUp.js\";\nimport React from 'react';\nimport ReactDOM from \"react-dom/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class SigningUp extends React.Component {\n  constructor(props) {\n    console.log(\"CONSTRUCTOR\\n\");\n    super(props);\n    // Handlers for each property of the state\n    this.handleChangeName = event => {\n      this.setState({\n        name: event.target.value\n      }, () => {});\n    };\n    this.handleChangeEmail = event => {\n      this.setState({\n        email: event.target.value\n      }, () => {});\n    };\n    this.handleChangePass = event => {\n      this.setState({\n        password: event.target.value\n      }, () => {});\n    };\n    // Function called when user clicks the Submit button\n    this.handleSubmit = event => {\n      event.preventDefault(); // Prevents the form from being submitted\n\n      const strDatabase = localStorage.getItem('localDB'); // The database that was passed as a prop\n      const database = JSON.parse(strDatabase);\n      let signUpEmail = this.state.email; // The users input email\n\n      this.ManageSignUp(signUpEmail, database);\n    };\n    //Handles the validation and processing of the users sign in\n    this.ManageSignUp = (signUpEmail, database) => {\n      let flag = false;\n      let emailValidityFlag = this.ValidateEmail(signUpEmail); // returns whether the users input email is valid\n\n      if (emailValidityFlag === false) {\n        alert(\"You have entered an invalid email address!\");\n        flag = true;\n      }\n\n      // Searches the database to see if the same email already exists\n\n      let matchedObj = database.filter(obj => obj.email === signUpEmail);\n      if (matchedObj.length === 1) {\n        alert(\"Email already Exists. Sign in instead?\");\n        flag = true;\n      }\n\n      // If everything is valid, user gets an alert and the login page loads\n      if (flag === false) {\n        database.push(this.state);\n        localStorage.setItem('localDB', JSON.stringify(database));\n        alert(\"Signed Up. Loading Login Page\");\n        setTimeout(this.goToLogin, 1000); // Async Call\n      }\n    };\n    // renders the login page\n    this.goToLogin = () => {\n      this.setState({\n        currentView: 'Login'\n      });\n    };\n    // Returns true if the email is valid\n    this.ValidateEmail = mail => {\n      if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(mail)) {\n        return true;\n      }\n      return false;\n    };\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n      currentView: 'SignUp'\n    };\n  }\n  componentDidMount() {\n    console.log(\"componentDidMount\");\n  }\n  static getDerivedStateFromProps() {\n    console.log(\"getDerivedStateFromProps\");\n  }\n  shouldComponentUpdate(nextProps, nextState, nextContext) {\n    console.log(\"shouldComponentUpdate\");\n    return null;\n  }\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    console.log(\"componentDidUpdate\");\n  }\n  componentWillUnmount() {\n    console.log(\"componentWillUnmount\");\n  }\n  render() {\n    console.log(\"RENDER\");\n    if (this.state.currentView === 'SignUp') {\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: this.state.name,\n          name: \"Name\",\n          onChange: this.handleChangeName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: this.state.email,\n          name: \"Email\",\n          onChange: this.handleChangeEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: this.state.password,\n          name: \"Password\",\n          onChange: this.handleChangePass\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.goToLogin,\n          children: \"Sign in?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this);\n    }\n  }\n}","map":{"version":3,"names":["React","ReactDOM","jsxDEV","_jsxDEV","SigningUp","Component","constructor","props","console","log","handleChangeName","event","setState","name","target","value","handleChangeEmail","email","handleChangePass","password","handleSubmit","preventDefault","strDatabase","localStorage","getItem","database","JSON","parse","signUpEmail","state","ManageSignUp","flag","emailValidityFlag","ValidateEmail","alert","matchedObj","filter","obj","length","push","setItem","stringify","setTimeout","goToLogin","currentView","mail","test","componentDidMount","getDerivedStateFromProps","shouldComponentUpdate","nextProps","nextState","nextContext","componentDidUpdate","prevProps","prevState","snapshot","componentWillUnmount","render","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","onClick"],"sources":["/home/sameed/Desktop/login_signup_hooks/src/SignUp.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from \"react-dom/client\";\n\n\nexport default class SigningUp extends React.Component {\n    constructor(props) {\n        console.log(\"CONSTRUCTOR\\n\")\n        super(props);\n        this.state = {\n            name: '',\n            email: '',\n            password: '',\n            currentView: 'SignUp'\n        };\n    }\n\n    componentDidMount() {\n        console.log(\"componentDidMount\")\n    }\n\n    static getDerivedStateFromProps(){\n        console.log(\"getDerivedStateFromProps\")\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        console.log(\"shouldComponentUpdate\")\n        return null\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        console.log(\"componentDidUpdate\")\n    }\n\n    componentWillUnmount() {\n        console.log(\"componentWillUnmount\")\n    }\n\n\n    // Handlers for each property of the state\n    handleChangeName = (event) => {\n        this.setState({name:event.target.value},()=>{\n        })\n    }\n    handleChangeEmail = (event) => {\n        this.setState({email:event.target.value},()=>{\n        })\n    }\n    handleChangePass = (event) => {\n        this.setState({password :event.target.value},()=>{\n        })\n    }\n\n    // Function called when user clicks the Submit button\n    handleSubmit = (event) => {\n        event.preventDefault(); // Prevents the form from being submitted\n\n        const strDatabase = localStorage.getItem('localDB'); // The database that was passed as a prop\n        const database = JSON.parse(strDatabase)\n\n        let signUpEmail = this.state.email; // The users input email\n\n        this.ManageSignUp(signUpEmail,database);\n\n    }\n\n    //Handles the validation and processing of the users sign in\n    ManageSignUp = (signUpEmail,database)=>{\n\n        let flag = false\n        let emailValidityFlag = this.ValidateEmail(signUpEmail); // returns whether the users input email is valid\n\n        if(emailValidityFlag === false){\n            alert(\"You have entered an invalid email address!\")\n            flag = true\n        }\n\n        // Searches the database to see if the same email already exists\n\n        let matchedObj = database.filter(obj => obj.email === signUpEmail);\n        if(matchedObj.length === 1){\n            alert(\"Email already Exists. Sign in instead?\")\n            flag = true\n        }\n\n\n        // If everything is valid, user gets an alert and the login page loads\n        if(flag === false){\n            database.push(this.state);\n            localStorage.setItem('localDB',JSON.stringify(database))\n\n            alert(\"Signed Up. Loading Login Page\");\n            setTimeout(this.goToLogin,1000); // Async Call\n        }\n    }\n\n\n    // renders the login page\n    goToLogin = ()=>{\n        this.setState({currentView:'Login'})\n    }\n\n\n    // Returns true if the email is valid\n    ValidateEmail = (mail) => {\n        if(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(mail))\n        {\n            return true\n        }\n        return false\n    }\n\n    render(){\n        console.log(\"RENDER\")\n\n        if(this.state.currentView === 'SignUp'){\n            return (\n                <form onSubmit={this.handleSubmit}>\n                    <label>Name:</label>\n                    <input value={this.state.name} name=\"Name\" onChange={this.handleChangeName}/>\n\n                    <label>Email:</label>\n                    <input value={this.state.email} name=\"Email\" onChange={this.handleChangeEmail}/>\n\n                    <label>Password:</label>\n                    <input value={this.state.password} name=\"Password\" onChange={this.handleChangePass}/>\n\n                    <button type=\"submit\">Submit</button>\n                    <button onClick={this.goToLogin}>Sign in?</button>\n                </form>\n            );\n        }\n\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}